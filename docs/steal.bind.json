c({"name": "steal.bind", "type": "attribute", "parents": ["steal"], "comment": "<p><code>steal.bind( event, handler(eventData...) )</code> listens to \nevents on steal. Typically these are used by various build processes\nto know when steal starts and finish loading resources and their\ndependencies. Listen to an event like:</p>\n\n<pre><code>steal.bind('end', function(rootModule){\n  rootModule.dependencies // the first stolen resources.\n})\n</code></pre>\n\n<p>Steal supports the following events:</p>\n\n<ul>\n<li><strong>start</strong> - steal has started loading a group of resources and their dependencies.</li>\n<li><strong>end</strong> - steal has finished loading a group of resources and their dependencies.</li>\n<li><strong>done</strong> - steal has finished loading the first set of resources and their dependencies.</li>\n<li><strong>ready</strong> - after both steal's \"done\" event  and the <code>window</code>'s onload event have fired.</li>\n</ul>\n\n<p>For example, the following html:</p>\n\n<pre><code class='html'>&lt;script src='steal/steal.js'>&lt;/script>\n&lt;script>\nsteal('can/control', function(){\n  setTimeout(function(){\n    steal('can/model')    \n  },200)\n})\n&lt;/script></code></pre>\n\n<p>Would fire:</p>\n\n<ul>\n<li><strong>start</strong> - immediately after <code>steal('can/control')</code> is called</li>\n<li><strong>end</strong> - after 'can/control', all of it's dependencies, and the callback function have executed and completed.</li>\n<li><strong>done</strong> - fired after the first 'end' event.</li>\n<li><strong>ready</strong> - fired after window.onload and the 'done' event</li>\n<li><strong>start</strong> - immediately after <code>steal('can/model')</code> is called</li>\n<li><strong>end</strong> - fired after 'can/model' and all of it's dependencies have fired.</li>\n</ul>", "params": {"event": {"order": 0, "description": "", "name": "event", "type": "String", "optional": false}, "listener": {"order": 1, "description": "", "name": "listener", "type": "Function", "optional": false}}, "src": {"query": "", "fragment": "", "path": "steal/steal.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 2047, "children": []})